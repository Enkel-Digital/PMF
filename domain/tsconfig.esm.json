{
  "extends": "./tsconfig.json",

  // tsconfig to generate ESM build output
  "compilerOptions": {
    "outDir": "./dist-esm",
    "tsBuildInfoFile": "./.tsbuildinfo-esm",

    /* ================================================================================= */

    "target": "es2022",

    // This config sets the module system for the program.
    //
    // `node16`/`nodenext` modes integrate with Nodeâ€™s native ECMAScript Module support.
    // Since package.json specified `type` to be `module`, all .js files are treated as
    // ES modules, which is why `NodeNext` here will ensure emitted JS uses ES2020 output.
    //
    // The main difference between ES6 and ES2020 modules is that ES2020 modules support
    // dynamic imports using `await import("...")` and the `import.meta` syntax.
    //
    // If this is not specified, it will default to ES6 if target is above ES6 and above.
    // This will affect the `moduleResolution` config too.
    "module": "NodeNext",

    // By default, this will be `nodenext` to match the `module` config.
    // Only the `nodenext` module resolution strategy will support Node.js ES Modules.
    "moduleResolution": "nodenext"
  }
}
